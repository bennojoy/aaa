# This file is generated. Do not edit.
# The configs are results of online config changes from UI/API/CLI.
# To persist configs in this file, copy the content to etc/base.hocon.
actions {
  http {
    publishwebhook_WH_D {
      connector = publishwebhook_WH_D
      created_at = 1747066198109
      enable = true
      last_modified_at = 1747098605696
      parameters {
        headers {content-type = "application/json"}
        max_retries = 2
        method = post
      }
      resource_opts {
        health_check_interval = "15s"
        inflight_window = 100
        max_buffer_bytes = "256MB"
        query_mode = async
        request_ttl = "45s"
        worker_pool_size = 16
      }
      tags = []
    }
  }
}
authentication = [
  {
    algorithm = "hmac-based"
    disconnect_after_expire = true
    enable = true
    from = username
    mechanism = jwt
    secret = "your-secret-key-here"
    secret_base64_encoded = false
    use_jwks = false
    verify_claims {}
  }
]
connectors {
  http {
    publishwebhook_WH_D {
      connect_timeout = "15s"
      enable = true
      enable_pipelining = 100
      headers {
        content-type = "application/json"
        x-client-id = "${clientid}"
        x-emqx-sub = "${client_attrs.sub}"
      }
      pool_size = 8
      pool_type = random
      resource_opts {
        health_check_interval = "15s"
        start_after_created = true
        start_timeout = "5s"
      }
      ssl {
        ciphers = []
        depth = 10
        enable = false
        hibernate_after = "5s"
        log_level = notice
        reuse_sessions = true
        secure_renegotiate = true
        verify = verify_none
        versions = [
          "tlsv1.3",
          "tlsv1.2"
        ]
      }
      tags = []
      url = "http://webhook-server:80/mqtt/webhook"
    }
  }
}
log {
  console {}
  file {}
}
retainer {
  allow_never_expire = true
  backend {
    enable = true
    index_specs = [[1, 2, 3], [1, 3], [2, 3], [3]]
    max_retained_messages = 100
    storage_type = ram
    type = built_in_database
  }
  delivery_rate = "1000/s"
  enable = true
  flow_control {
    batch_deliver_limiter {
      client {
        rate = "1000/s"
      }
      rate = infinity
    }
    batch_deliver_number = 1000
    batch_read_number = 1000
  }
  max_payload_size = "1MB"
  max_publish_rate = "1000/s"
  msg_clear_interval = "0s"
  msg_expiry_interval = "48h"
  msg_expiry_interval_override = disabled
  stop_publish_clear_msg = false
}
rule_engine {
  ignore_sys_message = true
  jq_function_default_timeout = "10s"
  rules {
    publishwebhook_WH_D {
      actions = [
        "http:publishwebhook_WH_D"
      ]
      description = ""
      enable = true
      metadata {last_modified_at = 1747098605799}
      name = ""
      sql = """~
        SELECT
          *
        FROM
          "messages/to_room"~"""
    }
    rule_tjce {
      actions = []
      description = ""
      enable = true
      metadata {created_at = 1747063931036, last_modified_at = 1747063931036}
      name = ""
      sql = """~
        SELECT
          *
        FROM
          "t/#"~"""
    }
  }
}
